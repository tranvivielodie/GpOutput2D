% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{Fpca2d}
\alias{Fpca2d}
\title{Two-dimensional Functional Principal Component Analysis (FPCA).}
\usage{
Fpca2d(method = c("Bsplines", "Wavelets"), ...)
}
\arguments{
\item{method}{a character string which specifies the method used to implement FPCA.}

\item{...}{further parameters for the basis decomposition : see \code{\link{Fpca2d.Wavelets}}, for using wavelets, and
\code{Fpca2d.Bsplines}, for using B-splines.}
}
\value{
an object of class "Fpca2d" which is a list with the following items :
 \itemize{
   \item \code{sdev} : the standard deviations of the principal components
                       (i.e., the square roots of the eigenvalues of the covariance operator).
   \item \code{EigFct} : a three dimensional array with the eigenfunctions.
                         The two first dimensions correspond to data (images, maps, etc.) dimensions.
                         The third one is the maximal number of principal component used.
   \item \code{x} : if \code{retx} is \code{TRUE} (see \code{\link{prcomp}}).
                    Data scores (coordinates in the eigen basis) are returned.
   \item \code{center}, \code{scale} : a logical value which indicates if data coefficients are respectively centered or scaled.
 }
}
\description{
A wrapper function to perform FPCA on two-dimensional data (images, maps, etc.),
             given a implementation method. For instance, the valid methods are
             two methods based on projection method (here, "Wavelets" and "Bsplines").
}
\examples{

################################
### two-dimensional data set ###
################################
n<-200 # size of the learning sample
nz<-64; z <- seq(-90,90,length=nz) # spatial domain

### inputs of Campbell2D ###
library(lhs)
library(DiceDesign)

x <- maximinLHS(n=n,k=8)
X <-maximinSA_LHS(x)$design
X<-X*6 -1

# Campbell2D
Y <- Campbell2D(X,z,z)

############
### FPCA ###
############


### using wavelet basis ###
fpca_w<- Fpca2d(Y,method="Wavelets",
                wf="d4", J=1, # wavelet parameters
                ncoeff=1200, rank.=5) # FPCA configuration

plot(fpca_w,type="eigenfunctions")
plot(fpca_w)

\dontrun{
### using B-splines basis ###

# knots for B-splines basis
K<-35
z.knots <- seq(-90,90,length=K)

fpca_Bs<- Fpca2d(Y,method="Bsplines",
                z1=z,z2=z,z1.knots=z.knots,z2.knots=z.knots, # wavelet parameters
                ncoeff=1225, rank.=2) # FPCA configuration

plot(fpca_Bs,type="eigenfunctions")
plot(fpca_Bs)
}

}
\seealso{
\code{\link{Fpca2d.Wavelets}}
}
\author{
Tran Vi-vi Elodie PERRIN
}
