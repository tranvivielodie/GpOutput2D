
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "GpOutput2D"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "GpOutput2D-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('GpOutput2D')
Loading required package: waveslim

waveslim: Wavelet Method for 1/2/3D Signals (version = 1.8.2)

Loading required package: orthogonalsplinebasis

Attaching package: 'orthogonalsplinebasis'

The following object is masked from 'package:stats':

    integrate

Loading required package: DiceKriging
Loading required package: kergp
Loading required package: Rcpp
Loading required package: testthat
Loading required package: nloptr
Loading required package: lattice
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Campbell2D")
> ### * Campbell2D
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Campbell2D
> ### Title: Example of function called Campbell2D
> ### Aliases: Campbell2D
> 
> ### ** Examples
> 
> # inputs of the Campbell2D function
> x1<-rep(-1,8); x2<-rep(5,8); x3<-c(5,3,1,-1,5,3,1,-1)
> X <- rbind(x1,x2,x3)
> 
> # spatial domain of the Campbell2D output
> nz<-64 # root of the size of the spatial domain
> z<-seq(-90,90,length=nz)
> 
> # Campbell2D function
> Y = Campbell2D(X,z,z)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Campbell2D", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Fpca2d")
> ### * Fpca2d
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Fpca2d
> ### Title: Two-dimensional Functional Principal Component Analysis (FPCA).
> ### Aliases: Fpca2d
> 
> ### ** Examples
> 
> 
> ################################
> ### two-dimensional data set ###
> ################################
> n<-200 # size of the learning sample
> nz<-64; z <- seq(-90,90,length=nz) # spatial domain
> 
> ### inputs of Campbell2D ###
> library(lhs)
> library(DiceDesign)
> 
> x <- maximinLHS(n=n,k=8)
> X <-maximinSA_LHS(x)$design
> X<-X*6 -1
> 
> # Campbell2D
> Y <- Campbell2D(X,z,z)
> 
> ############
> ### FPCA ###
> ############
> 
> 
> ### using wavelet basis ###
> fpca_w<- Fpca2d(Y,method="Wavelets",
+                 wf="d4", J=1, # wavelet parameters
+                 ncoeff=1200, rank.=5) # FPCA configuration
> 
> plot(fpca_w,type="eigenfunctions")
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
> plot(fpca_w)
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
> 
> ## Not run: 
> ##D ### using B-splines basis ###
> ##D 
> ##D # knots for B-splines basis
> ##D K<-35
> ##D z.knots <- seq(-90,90,length=K)
> ##D 
> ##D fpca_Bs<- Fpca2d(Y,method="Bsplines",
> ##D                 z1=z,z2=z,z1.knots=z.knots,z2.knots=z.knots, # wavelet parameters
> ##D                 ncoeff=1225, rank.=2) # FPCA configuration
> ##D 
> ##D plot(fpca_Bs,type="eigenfunctions")
> ##D plot(fpca_Bs)
> ## End(Not run)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Fpca2d", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:DiceDesign', 'package:lhs'

> nameEx("OrthoNormalBsplines2D")
> ### * OrthoNormalBsplines2D
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: OrthoNormalBsplines2D
> ### Title: Creating a two-dimensional othonormal B-splines basis
> ### Aliases: OrthoNormalBsplines2D
> 
> ### ** Examples
> 
> 
> #####################################
> #
> #  Create two-dimensional data set
> #
> ####################################
> 
> # inputs of the Campbell2D function
> x1<-rep(-1,8); x2<-rep(5,8); x3<-c(5,3,1,-1,5,3,1,-1)
> X <- rbind(x1,x2,x3)
> 
> # spatial domain of the Campbell2D output
> nz<-64 # root of the size of the spatial domain
> z<-seq(-90,90,length=nz)
> 
> # Campbell2D function
> Y = Campbell2D(X,z,z)
> 
> ###########################################
> #
> #  Create two-dimensional B-splines basis
> #
> ###########################################
> 
> # knots for B-splines basis
> K<-35
> z.knots <- seq(-90,90,length=K)
> 
> # Generating a two-dimensional othonormal B-splines basis
> OPhi <-OrthoNormalBsplines2D(z,z,z.knots,z.knots,ortho="GS")
> 
> ########################
> #
> #  Get control points
> #
> ########################
> 
> coeff_Y<-coef(OPhi,Y)
> 
> #######################
> #
> #  Approximation of Y
> #
> ########################
> 
> hatY <-Inverse2D(OPhi,coeff_Y)
> 
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("OrthoNormalBsplines2D", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Wavelet2D")
> ### * Wavelet2D
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Wavelet2D
> ### Title: Multiple two dimensional wavelet transform
> ### Aliases: Wavelet2D
> 
> ### ** Examples
> 
> # inputs of the Campbell2D function
> x1<-rep(-1,8); x2<-rep(5,8); x3<-c(5,3,1,-1,5,3,1,-1)
> X <- rbind(x1,x2,x3)
> 
> # spatial domain of the Campbell2D output
> nz<-64
> z<-seq(-90,90,length=nz)
> 
> # Campbell2D function
> Y = Campbell2D(X,z,z)
> 
> # Wavelet transform
> w <-Wavelet2D(Y,wf="d4",J=2)
> 
> # Inverse wavelet transform
> hatY <- Inverse2D(w)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Wavelet2D", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("gp_Fpca2d")
> ### * gp_Fpca2d
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: gp_Fpca2d
> ### Title: Gaussian Process Model on principal components of 'Fpca2d', by
> ###   using 'kergp' package
> ### Aliases: gp_Fpca2d
> 
> ### ** Examples
> 
> 
> ################################
> ### two-dimensional data set ###
> ################################
> n<-200 # size of the learning sample
> nz<-64; z <- seq(-90,90,length=nz) # spatial domain
> 
> ### inputs of Campbell2D ###
> library(lhs)
> library(DiceDesign)
> 
> x <- maximinLHS(n=n,k=8)
> X <-maximinSA_LHS(x)$design
> X<-X*6 -1
> 
> # Campbell2D
> Y <- Campbell2D(X,z,z)
> 
> # change X on data.frame
> colnames(X)<-paste("x",1:8,sep="")
> 
> ############
> ### FPCA ###
> ############
> 
> ### by using wavelet basis ###
> fpca_w<- Fpca2d(Y,method="Wavelets",
+                 wf="d4", J=1, # wavelet parameters
+                 ncoeff=1200, rank.=2) # FPCA configuration
> 
> #####################
> ###               ###
> ### Kriging model ###
> ###               ###
> #####################
> 
> #------------------------------------#
> #------------------------------------#
> #   Example by using wavelet basis   #
> #------------------------------------#
> #------------------------------------#
> 
> #--------------------------------------------#
> #  Same kernel for all principal components  #
> #--------------------------------------------#
> 
> ## kernel
> myCov <- covTS(inputs = colnames(X),
+ kernel = "k1Matern5_2",
+ dep = c(range = "input"),
+ value = c(range = 0.4))
> 
> myGp<- gp_Fpca2d(design=X, response=fpca_w, cov=myCov,estim=FALSE)
> 
> #-------------------------------------------------------------#
> #  Different kernel and formula for each principal component  #
> #-------------------------------------------------------------#
> 
> ## Not run: 
> ##D ## kernel of firt principal component
> ##D myCov1<-myCov
> ##D 
> ##D ## kernel of second principal component
> ##D myCov2 <- covTS(inputs = colnames(X),
> ##D kernel = "k1Matern3_2",
> ##D dep = c(range = "input"),
> ##D value = c(range = 0.4))
> ##D 
> ##D ## List of both kernels
> ##D myCovList <- list(myCov1,myCov2)
> ##D 
> ##D ## Gp model
> ##D myGp2<- gp_Fpca2d(formula=list(~1,~x1+x2+x3+x4+x5+x6+x7+x8),
> ##D            design=X, response=fpca_w, cov=myCovList,estim=FALSE)
> ## End(Not run)
> ##################
> ### Prediction ###
> ##################
> 
> NewX<-matrix(runif(5*8,min=-1,max=5),ncol=8) # newdata
> RealY <- Campbell2D(NewX,z,z)# real maps
> 
> # change NewX on data.frame
> colnames(NewX)<-colnames(X)
> 
> #------------------------------------#
> #------------------------------------#
> #   Example by using wavelet basis   #
> #------------------------------------#
> #------------------------------------#
> pw.UK <- predict(myGp,NewX,"UK")
> 
> ###############################
> ### Prediction RMSE and Q2  ###
> ###############################
> 
> #------------------------------------#
> #------------------------------------#
> #   Example by using wavelet basis   #
> #------------------------------------#
> #------------------------------------#
> err.pw.UK <-error.predict(RealY,pw.UK,fpca_w,rtx.scores=TRUE)
> 
> ### scores ###
> print(err.pw.UK$scores$rmse)
      PC1       PC2 
 87.62653 153.18168 
> print(err.pw.UK$scores$Q2)
       PC1        PC2 
 0.9732956 -1.0847540 
> 
> ### images/maps ###
> library(fields)
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.5-1 (2019-12-12) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: 'spam'

The following object is masked from 'package:kergp':

    mle

The following objects are masked from 'package:base':

    backsolve, forwardsolve

See https://github.com/NCAR/Fields for
 an extensive vignette, other supplements and source code 

Attaching package: 'fields'

The following object is masked from 'package:testthat':

    describe

> image.plot(err.pw.UK$y$rmse, main="RMSE")
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
> image.plot(err.pw.UK$y$Q2, main="Q2")
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("gp_Fpca2d", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:fields', 'package:spam', 'package:grid',
  'package:dotCall64', 'package:DiceDesign', 'package:lhs'

> nameEx("km_Fpca2d")
> ### * km_Fpca2d
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: km_Fpca2d
> ### Title: Gaussian Process Model on principal components of 'Fpca2d', by
> ###   using 'DiceKriging' package.
> ### Aliases: km_Fpca2d
> 
> ### ** Examples
> 
> 
> ################################
> ###   Learning Sample        ###
> ################################
> n<-200 # size of the learning sample
> nz<-64; z <- seq(-90,90,length=nz) # spatial domain
> 
> ### inputs of Campbell2D ###
> library(lhs)
> library(DiceDesign)
> 
> x <- maximinLHS(n=n,k=8)
> X <-maximinSA_LHS(x)$design
> X<-X*6 -1
> 
> # Campbell2D
> Y <- Campbell2D(X,z,z)
> 
> # change X on data.frame
> colnames(X)<-paste("x",1:8,sep="")
> 
> ############################
> ###   Test Sample        ###
> ############################
> 
> NewX<-matrix(runif(5*8,min=-1,max=5),ncol=8) # newdata
> RealY <- Campbell2D(NewX,z,z)# real maps
> 
> # change NewX on data.frame
> colnames(NewX)<-colnames(X)
> 
> 
> ######################################
> #
> #   Example by using wavelets
> #
> ######################################
> 
> ############
> ### FPCA ###
> ############
> 
> fpca_w<- Fpca2d(Y,method="Wavelets",
+                 wf="d4", J=1, # wavelet parameters
+                 ncoeff=1200, rank.=1) # FPCA configuration
> 
> #####################
> ### Kriging model ###
> #####################
> 
> mw <- km_Fpca2d(design=X,response=fpca_w,control=list(trace=FALSE))
> 
> #--------------------------------------------------------
> # (same example) To fix different kernel and formula
> #                for each principal component
> #--------------------------------------------------------
> ## Not run: 
> ##D mw <- km_Fpca2d(formula=list(~.,~1)),
> ##D                 design=X,response=fpca_w,
> ##D                 covtype = c("matern5_2","matern3_2"),
> ##D                 control=list(trace=FALSE))
> ## End(Not run)
> 
> #--------------------------------------------------------
> # (same example) how to use the multistart argument of km
> #--------------------------------------------------------
> ## Not run: 
> ##D nCores <- 2
> ##D require(doParallel)
> ##D cl <-  makeCluster(nCores)
> ##D registerDoParallel(cl)
> ##D mw <- km_Fpca2d(design=X,response=fpca_w,multistart=4,control=list(trace=FALSE))
> ##D stopCluster(cl)
> ## End(Not run)
> 
> ######################
> ###   Prediction   ###
> ######################
> 
> pw.UK <- predict(mw,NewX,"UK")
> 
> ####################
> ### RMSE and Q2  ###
> ####################
> 
> err.pw.UK <-error.predict(RealY,pw.UK,fpca_w,rtx.scores=TRUE)
> 
> ### scores ###
> print(err.pw.UK$scores$rmse)
     PC1 
36.73079 
> print(err.pw.UK$scores$Q2)
      PC1 
0.9953079 
> 
> ### images/maps ###
> library(fields)
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.5-1 (2019-12-12) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: 'spam'

The following object is masked from 'package:kergp':

    mle

The following objects are masked from 'package:base':

    backsolve, forwardsolve

See https://github.com/NCAR/Fields for
 an extensive vignette, other supplements and source code 

Attaching package: 'fields'

The following object is masked from 'package:testthat':

    describe

> image.plot(err.pw.UK$y$rmse, main="RMSE")
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
> image.plot(err.pw.UK$y$Q2, main="Q2")
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[22] 0.0000000 0.0000000 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804
[29] 0.3137255 0.3764706 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745
[36] 0.7490196 0.8117647 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000
[43] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[50] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[57] 0.9372549 0.8745098 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843
[64] 0.5019608
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
 [8] 0.0000000 0.0627451 0.1254902 0.1882353 0.2509804 0.3137255 0.3764706
[15] 0.4392157 0.5019608 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647
[22] 0.8745098 0.9372549 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[29] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[36] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098
[43] 0.8117647 0.7490196 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157
[50] 0.3764706 0.3137255 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
 [1] 0.00000000 0.01587302 0.03174603 0.04761905 0.06349206 0.07936508
 [7] 0.09523810 0.11111111 0.12698413 0.14285714 0.15873016 0.17460317
[13] 0.19047619 0.20634921 0.22222222 0.23809524 0.25396825 0.26984127
[19] 0.28571429 0.30158730 0.31746032 0.33333333 0.34920635 0.36507937
[25] 0.38095238 0.39682540 0.41269841 0.42857143 0.44444444 0.46031746
[31] 0.47619048 0.49206349 0.50793651 0.52380952 0.53968254 0.55555556
[37] 0.57142857 0.58730159 0.60317460 0.61904762 0.63492063 0.65079365
[43] 0.66666667 0.68253968 0.69841270 0.71428571 0.73015873 0.74603175
[49] 0.76190476 0.77777778 0.79365079 0.80952381 0.82539683 0.84126984
[55] 0.85714286 0.87301587 0.88888889 0.90476190 0.92063492 0.93650794
[61] 0.95238095 0.96825397 0.98412698 1.00000000
 [1] 0.5607843 0.6235294 0.6862745 0.7490196 0.8117647 0.8745098 0.9372549
 [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[15] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000
[22] 1.0000000 1.0000000 1.0000000 0.9372549 0.8745098 0.8117647 0.7490196
[29] 0.6862745 0.6235294 0.5607843 0.5019608 0.4392157 0.3764706 0.3137255
[36] 0.2509804 0.1882353 0.1254902 0.0627451 0.0000000 0.0000000 0.0000000
[43] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[50] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[57] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000
[64] 0.0000000
> 
> 
> ######################################
> #
> #   Example by using B-splines
> #
> ######################################
> 
> ## Not run: 
> ##D ############
> ##D ### FPCA ###
> ##D ############
> ##D 
> ##D ### using B-splines basis ###
> ##D 
> ##D # knots for B-splines basis
> ##D K<-35
> ##D z.knots <- seq(-90,90,length=K)
> ##D 
> ##D fpca_Bs<- Fpca2d(Y,method="Bsplines",
> ##D                 z1=z,z2=z,z1.knots=z.knots,z2.knots=z.knots, ortho="GS",
> ##D                 expand_knots=TRUE,# B-splines parameters
> ##D                 ncoeff=1225, rank.=5) # FPCA configuration
> ##D 
> ##D 
> ##D #####################
> ##D ### Kriging model ###
> ##D #####################
> ##D 
> ##D mB <- km_Fpca2d(design=X,response=fpca_Bs,control=list(trace=FALSE))
> ##D 
> ##D ##################
> ##D ### Prediction ###
> ##D ##################
> ##D 
> ##D pB.UK <- predict(mB,NewX,"UK")
> ##D 
> ##D ########################
> ##D ###   RMSE and Q2    ###
> ##D ########################
> ##D 
> ##D err.pB.UK <-error.predict(RealY,pB.UK,fpca_Bs,rtx.scores=TRUE)
> ##D 
> ##D ### scores ###
> ##D print(err.pB.UK$scores$rmse)
> ##D print(err.pB.UK$scores$Q2)
> ##D 
> ##D ### images/maps ###
> ##D library(fields)
> ##D image.plot(err.pB.UK$y$rmse, main="RMSE")
> ##D image.plot(err.pB.UK$y$Q2, main="Q2")
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("km_Fpca2d", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()

detaching 'package:fields', 'package:spam', 'package:grid',
  'package:dotCall64', 'package:DiceDesign', 'package:lhs'

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  14.02 0.5 14.92 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
